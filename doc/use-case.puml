@startuml DanceCupUseCases

left to right direction

actor Admin as "Представитель счётной коммиссии"
actor Judge as "Судья соревнования"
actor Dancer as "Участник соревнования"

rectangle TelegramApi
database ApplicationDB
database AuthDB

rectangle Api {
    usecase Api_FinishTour as "Завершить тур" 
}

rectangle Auth {
    usecase Auth_CreateUser as "Создать пользователя"
    usecase Auth_GetToken as "Получить токен"
}

rectangle UI {
    usecase UI_Register as "Зарегистрироваться представителю счётной комиссии"
    usecase UI_Login as "Войти представителю счётной комиссии"
    usecase UI_Logout as "Выйти представителю счётной комиссии"

    usecase UI_CrateTournament as "Создать и сконфигурировать турнир"
    usecase UI_EditTournament as "Редактировать турнир"
    usecase UI_DeleteTournament as "Удалить турнир"

    usecase UI_GetInvationForm as "Получить ссылку на регистрацию участника на турнир"
    usecase UI_ConfirmDancerRegistration as "Подтвердить регистрацию участника"
     
    usecase UI_FinishTour as "Завершить тур" 

    usecase UI_SentInvationForm as "Зарегистрироваться участнику на турнир"
}

Admin --> UI_Register
UI_Register --> Auth_CreateUser
Auth_CreateUser --> AuthDB

Admin --> UI_Login
UI_Login --> Auth_GetToken
Auth_GetToken --> AuthDB

Admin --> UI_Logout

Admin --> UI_CrateTournament
Admin --> UI_GetInvationForm
Admin --> UI_ConfirmDancerRegistration

Admin --> UI_FinishTour
UI_FinishTour --> Api_FinishTour
Api_FinishTour --> ApplicationDB
Api_FinishTour --> TelegramApi : "Уведомить, кто прошёл в следующий"

Dancer --> UI_SentInvationForm

Admin -up-> Dancer : "Отправить форму регистрации на турнир"

Admin -up-> Judge : "Дать бланки для оценок"
Judge --> Admin : "Вернуть бланк с оценками"

@enduml